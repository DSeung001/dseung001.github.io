name: Deploy Hugo site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          sudo dpkg -i ${{ runner.temp }}/hugo.deb
        env:
          HUGO_VERSION: 0.147.8

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Debug - List files
        run: |
          echo "Current directory:"
          pwd
          echo "Files in current directory:"
          ls -la
          echo "Themes directory:"
          ls -la themes/ || echo "Themes directory not found"
          echo "Content directory:"
          ls -la content/ || echo "Content directory not found"

      - name: Download Theme (if not exists)
        run: |
          if [ ! -d "themes/PaperMod" ]; then
            echo "Theme not found, downloading..."
            git clone --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod
          else
            echo "Theme already exists, but will re-download to ensure latest version"
            rm -rf themes/PaperMod
            git clone --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod
          fi
          echo "Theme directory contents:"
          ls -la themes/PaperMod/
          echo "Theme version:"
          cat themes/PaperMod/theme.toml || echo "No theme.toml found"

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
          echo "Build completed. Public directory:"
          ls -la public/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4